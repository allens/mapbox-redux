!function(e){function t(t){for(var r,i,u=t[0],s=t[1],c=t[2],d=0,f=[];d<u.length;d++)i=u[d],a[i]&&f.push(a[i][0]),a[i]=0;for(r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r]);for(l&&l(t);f.length;)f.shift()();return o.push.apply(o,c||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],r=!0,u=1;u<n.length;u++){var s=n[u];0!==a[s]&&(r=!1)}r&&(o.splice(t--,1),e=i(i.s=n[0]))}return e}var r={},a={1:0},o=[];function i(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=r,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="";var u=window.webpackJsonp=window.webpackJsonp||[],s=u.push.bind(u);u.push=t,u=u.slice();for(var c=0;c<u.length;c++)t(u[c]);var l=s;o.push([14,0]),n()}([,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default='<p>This is a basic sample using MapboxGL and Redux. Was made using the <a href="https://github.com/mapbox/mapbox-gl-redux" target="_blank">mapbox-gl-redux</a> library. </p><p><a href="https://github.com/michogar/mapbox-redux" target="_blank">Show me the code!</a></p>'},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(4),i=(r=o)&&r.__esModule?r:{default:r};var u=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.parent=document.getElementById(t),this.render()}return a(e,[{key:"render",value:function(){var e=document.createElement("div");e.className="col12 pad2y",this.parent.appendChild(e),e.insertAdjacentHTML("beforeend",i.default)}}]),e}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var a=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.store=r;var a=n.MapActionCreators.jumpTo;this.jumpTo=a.bind(this);var o=this.store.getState().bearing;this.bearing=o||0,this.parent=document.getElementById(t),this.unsubscriber=r.subscribe(this.onChangeBearing.bind(this)),this.render()}return r(e,[{key:"onChangeBearing",value:function(){var e=this.store.getState().bearing;this.bearing=e,this.render()}},{key:"onClickBearing",value:function(){this.store.dispatch(this.jumpTo({bearing:0}))}},{key:"render",value:function(){var e=document.getElementById("compass");e&&e.remove(),(e=document.createElement("div")).className="margin3 col3",e.id="compass";var t=document.createElement("a");t.className="button icon compass",t.style.transformOrigin="center",t.style.transform="rotate("+-this.bearing+"deg)",t.addEventListener("click",this.onClickBearing.bind(this)),e.appendChild(t),this.parent.appendChild(e)}},{key:"unsubscribe",value:function(){this.unsubscriber()}}]),e}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var a=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.store=r,this.actions=n.MapActionCreators,this.parent=document.getElementById(t),this.render()}return r(e,[{key:"render",value:function(){var e=document.createElement("div");e.className="pill col6";var t=document.createElement("a");t.className="button icon minus",t.addEventListener("click",this.zoomOut.bind(this));var n=document.createElement("a");n.className="button icon plus",n.addEventListener("click",this.zoomIn.bind(this)),e.appendChild(t),e.appendChild(n),this.parent.appendChild(e)}},{key:"zoomIn",value:function(){this.store.dispatch(this.actions.zoomIn())}},{key:"zoomOut",value:function(){this.store.dispatch(this.actions.zoomOut())}}]),e}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.About=t.Compass=t.Zoom=void 0;var r=i(n(7)),a=i(n(6)),o=i(n(5));function i(e){return e&&e.__esModule?e:{default:e}}t.Zoom=r.default,t.Compass=a.default,t.About=o.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),a={bearing:0};t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:a,t=arguments[1],n=t.map;switch(t.type){case r.MapActionTypes.zoomend:return Object.assign({},e,{zoom:n.getZoom()});case r.MapActionTypes.sync:case r.MapActionTypes.rotate:return Object.assign({},e,{bearing:n.getBearing()});default:return e}}},,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,a=n(11),o=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(0)),i=n(9),u=(r=i)&&r.__esModule?r:{default:r};var s=o.mapMiddleware,c=(0,a.createStore)(u.default,(0,a.applyMiddleware)(s));t.default=c},,function(e,t,n){"use strict";var r=u(n(13)),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(0)),o=u(n(12)),i=n(8);function u(e){return e&&e.__esModule?e:{default:e}}var s=new r.default.Map({container:"map",style:"https://api.tmb.cat/v1/maps/vts/styles/positron/style.json?app_id=b53a5765&app_key=cb2fc6155198c620d9d6f454d4a6ef69",center:[2.15,41.39],zoom:12,bearing:-45,hash:!0});s.on("load",function(){var e=new a.ReduxMapControl("map");s.addControl(e),o.default.dispatch(e.MapActionCreators.sync());new i.Zoom("panel",e,o.default),new i.Compass("panel",e,o.default),new i.About("about")})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,